
temp_corre_letras.o:     file format elf32-sisa
temp_corre_letras.o
architecture: sisa:3, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00000000 vaddr 0x00003f8c paddr 0x00003f8c align 2**0
         filesz 0x00000908 memsz 0x00000908 flags r-x
    LOAD off    0x00000910 vaddr 0x00006000 paddr 0x00006000 align 2**0
         filesz 0x00000060 memsz 0x000000a0 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .sistema      00000894  00004000  00004000  00000074  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .sysdata      00000060  00006000  00006000  00000910  2**1  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  00006060  00006060  00000970  2**4  ALLOC
  3 .stab         000007bc  000060a0  000060a0  00000970  2**2  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000005c1  0000685c  0000685c  0000112c  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00004000 l    d  .sistema	00000000 .sistema
0000400e l       .sistema	00000000 __exit
00004010 l       .sistema	00000000 RSI_default_resume
00004012 l       .sistema	00000000 RSE_default_halt
00004014 l       .sistema	00000000 RSE_default_resume
00004034 l       .sistema	00000000 __repe
00004000 g       .sistema	00000000 __entry_point
000041a8 g     F .sistema	00000334 reset_corre_letras
0000410c g     F .sistema	0000009c write
000044dc g     F .sistema	000003b8 main
000040d4 g     F .sistema	00000038 strlen_s
0000408a g     F .sistema	0000004a mostrar_nueva_posicion
00004048 g     F .sistema	00000042 borrar_letra
00004016 g     F .sistema	00000032 clear_screen


Disassembly of section .sistema:

00004000 <__entry_point>:
    4000:	5e00 	movi	r7, 0
    4002:	5f7a 	movhi	r7, 122
    4004:	5a0e 	movi	r5, 14
    4006:	5b40 	movhi	r5, 64
    4008:	5cdc 	movi	r6, -36
    400a:	5d44 	movhi	r6, 68
    400c:	a183 	jmp	r6

0000400e <__exit>:
    400e:	ffff 	halt	

00004010 <RSI_default_resume>:
    4010:	a183 	jmp	r6

00004012 <RSE_default_halt>:
    4012:	ffff 	halt	

00004014 <RSE_default_resume>:
    4014:	a183 	jmp	r6

00004016 <clear_screen>:
* Borra la pantalla: Escribe 80x30 caracteres (espacios con   *
* fondo negro) en la memoria de la pantalla (0xA000)          *
**************************************************************/ 
void clear_screen(void)
{
    4016:	2ff2 	addi	r7, r7, -14
    4018:	4bc6 	st	12(r7), r5
    401a:	4dc5 	st	10(r7), r6
    401c:	2dca 	addi	r6, r7, 10
    401e:	45c1 	st	2(r7), r2
    4020:	47c0 	st	0(r7), r3
    int aux1, aux2, aux3;

    __asm__ (  
    4022:	37bd 	ld	r3, -6(r6)
    4024:	35be 	ld	r2, -4(r6)
    4026:	33bf 	ld	r1, -2(r6)
    4028:	5600 	movi	r3, 0
    402a:	57a0 	movhi	r3, -96
    402c:	5460 	movi	r2, 96
    402e:	5509 	movhi	r2, 9
    4030:	5220 	movi	r1, 32
    4032:	5300 	movhi	r1, 0

00004034 <__repe>:
    4034:	42c0 	st	0(r3), r1
    4036:	26c2 	addi	r3, r3, 2
    4038:	24bf 	addi	r2, r2, -1
    403a:	65fc 	bnz	r2, -6
            "movi  %0, lo(0xA000)\n\t"   //0xA000 direccion de inicio de la memoria de video
            "movhi %0, hi(0xA000)\n\t"
            "movi  %1, lo(2400)\n\t"     //(80*30=2400=0x0960) numero caracteres de la pantalla
            "movhi %1, hi(2400)\n\t"
            "movi  %2, lo(0x0020)\n\t"
            "movhi %2, hi(0x0020)\n\t"   //un espacio en color negro
            "__repe: st 0(%0), %2\n\t"
            "addi  %0, %0,2\n\t"
            "addi  %1, %1,-1\n\t"
            "bnz   %1, __repe\n\t"
            : /* sin salidas*/
            : "r" (aux1),
              "r" (aux2),
              "r" (aux3));  
}
    403c:	35c1 	ld	r2, 2(r7)
    403e:	37c0 	ld	r3, 0(r7)
    4040:	3dc5 	ld	r6, 10(r7)
    4042:	3bc6 	ld	r5, 12(r7)
    4044:	2fce 	addi	r7, r7, 14
    4046:	a143 	jmp	r5

00004048 <borrar_letra>:


/**************************************************************
* Borra un caracter en la pantalla: Escribe un espacio con    *
* fondo negro en la fila y columnas indicadas                 *
**************************************************************/ 
void borrar_letra(int fila, int col)
{
    4048:	2ff4 	addi	r7, r7, -12
    404a:	4bc5 	st	10(r7), r5
    404c:	4dc4 	st	8(r7), r6
    404e:	2dc8 	addi	r6, r7, 8
    4050:	41c1 	st	2(r7), r0
    4052:	45c0 	st	0(r7), r2
    int valor;
    int pos;

    valor=0x0020;               //un espacio en color negro
    4054:	5220 	movi	r1, 32
    4056:	43be 	st	-4(r6), r1
    pos=(80*fila+col)*2;        // cada caracter ocupa 2 bytes de memoria de video
    4058:	3382 	ld	r1, 4(r6)
    405a:	2440 	addi	r2, r1, 0
    405c:	5204 	movi	r1, 4
    405e:	04b1 	sha	r2, r2, r1
    4060:	5202 	movi	r1, 2
    4062:	02b1 	sha	r1, r2, r1
    4064:	04a1 	add	r2, r2, r1
    4066:	3383 	ld	r1, 6(r6)
    4068:	02a1 	add	r1, r2, r1
    406a:	0261 	add	r1, r1, r1
    406c:	43bf 	st	-2(r6), r1
    pos=pos + 0xA000;           // la memoria de video empieza en la direccion 0xA000 (40960)
    406e:	33bf 	ld	r1, -2(r6)
    4070:	5400 	movi	r2, 0
    4072:	55a0 	movhi	r2, -96
    4074:	0262 	add	r1, r1, r2
    4076:	43bf 	st	-2(r6), r1

    __asm__ (
    4078:	31bf 	ld	r0, -2(r6)
    407a:	33be 	ld	r1, -4(r6)
    407c:	4200 	st	0(r0), r1
            "st 0(%0), %1"      // %0 corresponde a la variable "pos" que habra sido cargada en un registro
                                // %1 corresponde a la variable "c" que habra sido cargada en otro registro
            : /* sin salidas */
            : "a" (pos),
              "b" (valor));  
}
    407e:	31c1 	ld	r0, 2(r7)
    4080:	35c0 	ld	r2, 0(r7)
    4082:	3dc4 	ld	r6, 8(r7)
    4084:	3bc5 	ld	r5, 10(r7)
    4086:	2fcc 	addi	r7, r7, 12
    4088:	a143 	jmp	r5

0000408a <mostrar_nueva_posicion>:


/*******************************************************************
* Muestra un caracter en la pantalla: Escribe el caracter recibido *
* con el color y fondo indicados en la fila y columnas indicadas   *
*******************************************************************/ 
void mostrar_nueva_posicion(int fila, int col, char c, char color)
{
    408a:	2ff4 	addi	r7, r7, -12
    408c:	4bc5 	st	10(r7), r5
    408e:	4dc4 	st	8(r7), r6
    4090:	2dc8 	addi	r6, r7, 8
    4092:	41c1 	st	2(r7), r0
    4094:	45c0 	st	0(r7), r2
    int caracter_compuesto;
    int pos;

    caracter_compuesto=color*256+c;
    4096:	d589 	ldb	r2, 9(r6)
    4098:	5208 	movi	r1, 8
    409a:	04b1 	sha	r2, r2, r1
    409c:	d388 	ldb	r1, 8(r6)
    409e:	02a1 	add	r1, r2, r1
    40a0:	43be 	st	-4(r6), r1
    pos=(80*fila+col)*2;           // cada caracter ocupa 2 bytes de memoria de video
    40a2:	3382 	ld	r1, 4(r6)
    40a4:	2440 	addi	r2, r1, 0
    40a6:	5204 	movi	r1, 4
    40a8:	04b1 	sha	r2, r2, r1
    40aa:	5202 	movi	r1, 2
    40ac:	02b1 	sha	r1, r2, r1
    40ae:	04a1 	add	r2, r2, r1
    40b0:	3383 	ld	r1, 6(r6)
    40b2:	02a1 	add	r1, r2, r1
    40b4:	0261 	add	r1, r1, r1
    40b6:	43bf 	st	-2(r6), r1
    pos=pos + 0xA000;              // la memoria de video empieza en la direccion 0xA000 (40960)
    40b8:	33bf 	ld	r1, -2(r6)
    40ba:	5400 	movi	r2, 0
    40bc:	55a0 	movhi	r2, -96
    40be:	0262 	add	r1, r1, r2
    40c0:	43bf 	st	-2(r6), r1

    __asm__ (
    40c2:	31bf 	ld	r0, -2(r6)
    40c4:	33be 	ld	r1, -4(r6)
    40c6:	4200 	st	0(r0), r1
            "st 0(%0), %1"         // %0 corresponde a la variable "pos" que habra sido cargada en un registro
                                   // %1 corresponde a la variable "c" que habra sido cargada en otro registro
            : /* sin salidas */
            : "a" (pos),
              "b" (caracter_compuesto));  
}
    40c8:	31c1 	ld	r0, 2(r7)
    40ca:	35c0 	ld	r2, 0(r7)
    40cc:	3dc4 	ld	r6, 8(r7)
    40ce:	3bc5 	ld	r5, 10(r7)
    40d0:	2fcc 	addi	r7, r7, 12
    40d2:	a143 	jmp	r5

000040d4 <strlen_s>:


/*****************************************************************
* Devuelve la longitud de una cadena de caracteres *
******************************************************************/ 
int strlen_s(char *str)
{
    40d4:	2ff8 	addi	r7, r7, -8
    40d6:	4bc3 	st	6(r7), r5
    40d8:	4dc2 	st	4(r7), r6
    40da:	2dc4 	addi	r6, r7, 4
    40dc:	45c0 	st	0(r7), r2
  int len;
  for (len = 0; *str++; len++);
    40de:	5200 	movi	r1, 0
    40e0:	43bf 	st	-2(r6), r1
    40e2:	5a00 	movi	r5, 0
    40e4:	6a03 	bz	r5, 8
    40e6:	33bf 	ld	r1, -2(r6)
    40e8:	2241 	addi	r1, r1, 1
    40ea:	43bf 	st	-2(r6), r1
    40ec:	3382 	ld	r1, 4(r6)
    40ee:	d440 	ldb	r2, 0(r1)
    40f0:	5200 	movi	r1, 0
    40f2:	1299 	cmpeq	r1, r2, r1
    40f4:	0258 	not	r1, r1
    40f6:	2242 	addi	r1, r1, 2
    40f8:	3382 	ld	r1, 4(r6)
    40fa:	2241 	addi	r1, r1, 1
    40fc:	4382 	st	4(r6), r1
    40fe:	65f3 	bnz	r2, -24
  return len;
    4100:	33bf 	ld	r1, -2(r6)
}
    4102:	35c0 	ld	r2, 0(r7)
    4104:	3dc2 	ld	r6, 4(r7)
    4106:	3bc3 	ld	r5, 6(r7)
    4108:	2fc8 	addi	r7, r7, 8
    410a:	a143 	jmp	r5

0000410c <write>:


/*****************************************************************
* Muestra una cadena de caracteres en la pantalla con el color y *
* el fondo indicados empezando la fila y columnas indicadas      *
******************************************************************/ 
int write(int fila, int col, char *buf, int size, char color)
{
    410c:	2fee 	addi	r7, r7, -18
    410e:	4bc8 	st	16(r7), r5
    4110:	4dc7 	st	14(r7), r6
    4112:	2dce 	addi	r6, r7, 14
    4114:	45c1 	st	2(r7), r2
    4116:	47c0 	st	0(r7), r3
  int i, t;
  int f, c, car;
  t = 0; f = fila; c = col;
    4118:	5200 	movi	r1, 0
    411a:	43bc 	st	-8(r6), r1
    411c:	3382 	ld	r1, 4(r6)
    411e:	43bd 	st	-6(r6), r1
    4120:	3383 	ld	r1, 6(r6)
    4122:	43be 	st	-4(r6), r1
  for (i=0; i<size; i++)   
    4124:	5200 	movi	r1, 0
    4126:	43bb 	st	-10(r6), r1
    4128:	5a8e 	movi	r5, -114
    412a:	5b41 	movhi	r5, 65
    412c:	a143 	jmp	r5
    {
      car = buf[i];
    412e:	35bb 	ld	r2, -10(r6)
    4130:	3384 	ld	r1, 8(r6)
    4132:	02a1 	add	r1, r2, r1
    4134:	d240 	ldb	r1, 0(r1)
    4136:	43bf 	st	-2(r6), r1
      mostrar_nueva_posicion(f, c, car, color);
    4138:	33bf 	ld	r1, -2(r6)
    413a:	2640 	addi	r3, r1, 0
    413c:	2ffa 	addi	r7, r7, -6
    413e:	25c0 	addi	r2, r7, 0
    4140:	33bd 	ld	r1, -6(r6)
    4142:	4280 	st	0(r2), r1
    4144:	33be 	ld	r1, -4(r6)
    4146:	4281 	st	2(r2), r1
    4148:	e684 	stb	4(r2), r3
    414a:	d38c 	ldb	r1, 12(r6)
    414c:	e285 	stb	5(r2), r1
    414e:	528a 	movi	r1, -118
    4150:	5340 	movhi	r1, 64
    4152:	aa44 	jal	r5, r1
    4154:	2fc6 	addi	r7, r7, 6
      t++;
    4156:	33bc 	ld	r1, -8(r6)
    4158:	2241 	addi	r1, r1, 1
    415a:	43bc 	st	-8(r6), r1
      if (car=='\n') f++;
    415c:	35bf 	ld	r2, -2(r6)
    415e:	520a 	movi	r1, 10
    4160:	1299 	cmpeq	r1, r2, r1
    4162:	6205 	bz	r1, 12
    4164:	33bd 	ld	r1, -6(r6)
    4166:	2241 	addi	r1, r1, 1
    4168:	43bd 	st	-6(r6), r1
    416a:	5a00 	movi	r5, 0
    416c:	6a0d 	bz	r5, 28
      else if (car=='\r') c=1;
    416e:	33bf 	ld	r1, -2(r6)
    4170:	540d 	movi	r2, 13
    4172:	125a 	cmpeq	r1, r1, r2
    4174:	6204 	bz	r1, 10
    4176:	5201 	movi	r1, 1
    4178:	43be 	st	-4(r6), r1
    417a:	5a00 	movi	r5, 0
    417c:	6a05 	bz	r5, 12
      else if (car!=0) c++;   
    417e:	33bf 	ld	r1, -2(r6)
    4180:	6203 	bz	r1, 8
    4182:	33be 	ld	r1, -4(r6)
    4184:	2241 	addi	r1, r1, 1
    4186:	43be 	st	-4(r6), r1
    4188:	33bb 	ld	r1, -10(r6)
    418a:	2241 	addi	r1, r1, 1
    418c:	43bb 	st	-10(r6), r1
    418e:	33bb 	ld	r1, -10(r6)
    4190:	3585 	ld	r2, 10(r6)
    4192:	1242 	cmplt	r1, r1, r2
    4194:	5a2e 	movi	r5, 46
    4196:	5b41 	movhi	r5, 65
    4198:	a341 	jnz	r1, r5
    }

  return t;
    419a:	33bc 	ld	r1, -8(r6)
}
    419c:	35c1 	ld	r2, 2(r7)
    419e:	37c0 	ld	r3, 0(r7)
    41a0:	3dc7 	ld	r6, 14(r7)
    41a2:	3bc8 	ld	r5, 16(r7)
    41a4:	2fd2 	addi	r7, r7, 18
    41a6:	a143 	jmp	r5

000041a8 <reset_corre_letras>:




#define ANCHO_PANTALLA  80
#define LIMITE_LETRAS   13

/* colores */
#define NEGRO           0x00
#define BLANCO          0x3F
#define ROJO            0x03
#define VERDE           0x0C
#define AZUL            0x30
#define GRIS_OSCURO     0x15
#define AZUL_CIELO      0x3C
#define AMARILLO        0x0F
#define LILA            0x2A
#define GRIS_CLARO      0x2A
#define GRIS_MUY_CLARO  0x3F

char letras[] = {'A','B','C','D','E','F','G','H','I','J','K','L','M'};
char colores[] = {BLANCO, ROJO, VERDE, AZUL, GRIS_OSCURO, AZUL_CIELO, AMARILLO, LILA, GRIS_CLARO, GRIS_MUY_CLARO, 0x1A, 0X21, 0X2B};
int divisores[] = {1,2,3,4,5,6,7,8,9,10,11,12,13};
char mensaje[] = "pulsa 'R' para reiniciar o 'P' para pausa.";

unsigned int tics_timer=0;     //variable global cuyo valor es modificado por la interrupcion de reloj
unsigned int tecla_pulsada=0;  //variable global cuyo valor es modificado por la interrupcion de teclado

struct letra_t
{
    int posicion;    // posicion dentro la linea
    char caracter;   // caracter a mostrar
    char color;      // color caracter

};

#define NUMERO_LETRAS  12
struct letra_t  letra[NUMERO_LETRAS];


void reset_corre_letras(void)
{
    41a8:	2fe0 	addi	r7, r7, -32
    41aa:	4bcf 	st	30(r7), r5
    41ac:	4dce 	st	28(r7), r6
    41ae:	2ddc 	addi	r6, r7, 28
    41b0:	5acc 	movi	r5, -52
    41b2:	0fe5 	add	r7, r7, r5
    41b4:	41c3 	st	6(r7), r0
    41b6:	45c2 	st	4(r7), r2
    41b8:	47c1 	st	2(r7), r3
    41ba:	49c0 	st	0(r7), r4
    clear_screen();      // borrar pantalla
    41bc:	5216 	movi	r1, 22
    41be:	5340 	movhi	r1, 64
    41c0:	aa44 	jal	r5, r1

    write(15, 19, mensaje, strlen_s(mensaje), ROJO);
    41c2:	2ffe 	addi	r7, r7, -2
    41c4:	25c0 	addi	r2, r7, 0
    41c6:	5234 	movi	r1, 52
    41c8:	5360 	movhi	r1, 96
    41ca:	4280 	st	0(r2), r1
    41cc:	52d4 	movi	r1, -44
    41ce:	5340 	movhi	r1, 64
    41d0:	aa44 	jal	r5, r1
    41d2:	2fc2 	addi	r7, r7, 2
    41d4:	2640 	addi	r3, r1, 0
    41d6:	2ff6 	addi	r7, r7, -10
    41d8:	25c0 	addi	r2, r7, 0
    41da:	520f 	movi	r1, 15
    41dc:	4280 	st	0(r2), r1
    41de:	5213 	movi	r1, 19
    41e0:	4281 	st	2(r2), r1
    41e2:	5234 	movi	r1, 52
    41e4:	5360 	movhi	r1, 96
    41e6:	4282 	st	4(r2), r1
    41e8:	4683 	st	6(r2), r3
    41ea:	5203 	movi	r1, 3
    41ec:	e288 	stb	8(r2), r1
    41ee:	520c 	movi	r1, 12
    41f0:	5341 	movhi	r1, 65
    41f2:	aa44 	jal	r5, r1
    41f4:	2fca 	addi	r7, r7, 10
    int i;    
    for (i=0; i<NUMERO_LETRAS; i++) {
    41f6:	5200 	movi	r1, 0
    41f8:	43bf 	st	-2(r6), r1
    41fa:	5abe 	movi	r5, -66
    41fc:	5b44 	movhi	r5, 68
    41fe:	a143 	jmp	r5
        letra[i].posicion=0;
    4200:	35bf 	ld	r2, -2(r6)
    4202:	5070 	movi	r0, 112
    4204:	5160 	movhi	r0, 96
    4206:	41b8 	st	-16(r6), r0
    4208:	520f 	movi	r1, 15
    420a:	0258 	not	r1, r1
    420c:	2241 	addi	r1, r1, 1
    420e:	02b1 	sha	r1, r2, r1
    4210:	2680 	addi	r3, r2, 0
    4212:	2840 	addi	r4, r1, 0
    4214:	520e 	movi	r1, 14
    4216:	0258 	not	r1, r1
    4218:	2241 	addi	r1, r1, 1
    421a:	02f9 	shl	r1, r3, r1
    421c:	43b7 	st	-18(r6), r1
    421e:	5002 	movi	r0, 2
    4220:	5202 	movi	r1, 2
    4222:	43b6 	st	-20(r6), r1
    4224:	0530 	sha	r2, r4, r0
    4226:	31b7 	ld	r0, -18(r6)
    4228:	040a 	or	r2, r0, r2
    422a:	31b6 	ld	r0, -20(r6)
    422c:	02f0 	sha	r1, r3, r0
    422e:	37b8 	ld	r3, -16(r6)
    4230:	04e1 	add	r2, r3, r1
    4232:	5200 	movi	r1, 0
    4234:	4280 	st	0(r2), r1
        letra[i].caracter=letras[i];
    4236:	39bf 	ld	r4, -2(r6)
    4238:	49b9 	st	-14(r6), r4
    423a:	39bf 	ld	r4, -2(r6)
    423c:	5000 	movi	r0, 0
    423e:	5160 	movhi	r0, 96
    4240:	520f 	movi	r1, 15
    4242:	0258 	not	r1, r1
    4244:	2241 	addi	r1, r1, 1
    4246:	0731 	sha	r3, r4, r1
    4248:	2300 	addi	r1, r4, 0
    424a:	24c0 	addi	r2, r3, 0
    424c:	0221 	add	r1, r0, r1
    424e:	d240 	ldb	r1, 0(r1)
    4250:	43ba 	st	-12(r6), r1
    4252:	5070 	movi	r0, 112
    4254:	5160 	movhi	r0, 96
    4256:	41b5 	st	-22(r6), r0
    4258:	520f 	movi	r1, 15
    425a:	0258 	not	r1, r1
    425c:	2241 	addi	r1, r1, 1
    425e:	35b9 	ld	r2, -14(r6)
    4260:	06b1 	sha	r3, r2, r1
    4262:	39b9 	ld	r4, -14(r6)
    4264:	2300 	addi	r1, r4, 0
    4266:	24c0 	addi	r2, r3, 0
    4268:	560e 	movi	r3, 14
    426a:	06d8 	not	r3, r3
    426c:	26c1 	addi	r3, r3, 1
    426e:	067b 	shl	r3, r1, r3
    4270:	47b4 	st	-24(r6), r3
    4272:	5002 	movi	r0, 2
    4274:	5602 	movi	r3, 2
    4276:	47b3 	st	-26(r6), r3
    4278:	08b0 	sha	r4, r2, r0
    427a:	31b4 	ld	r0, -24(r6)
    427c:	080c 	or	r4, r0, r4
    427e:	31b3 	ld	r0, -26(r6)
    4280:	0670 	sha	r3, r1, r0
    4282:	5202 	movi	r1, 2
    4284:	43b1 	st	-30(r6), r1
    4286:	5400 	movi	r2, 0
    4288:	45b2 	st	-28(r6), r2
    428a:	31b1 	ld	r0, -30(r6)
    428c:	02e0 	add	r1, r3, r0
    428e:	50b8 	movi	r0, -72
    4290:	0026 	add	r0, r0, r6
    4292:	4200 	st	0(r0), r1
    4294:	52b8 	movi	r1, -72
    4296:	0266 	add	r1, r1, r6
    4298:	3240 	ld	r1, 0(r1)
    429a:	1463 	cmpltu	r2, r1, r3
    429c:	52bc 	movi	r1, -68
    429e:	0266 	add	r1, r1, r6
    42a0:	4440 	st	0(r1), r2
    42a2:	35b2 	ld	r2, -28(r6)
    42a4:	0122 	add	r0, r4, r2
    42a6:	54ba 	movi	r2, -70
    42a8:	04a6 	add	r2, r2, r6
    42aa:	4080 	st	0(r2), r0
    42ac:	58bc 	movi	r4, -68
    42ae:	0926 	add	r4, r4, r6
    42b0:	3100 	ld	r0, 0(r4)
    42b2:	58ba 	movi	r4, -70
    42b4:	0926 	add	r4, r4, r6
    42b6:	3900 	ld	r4, 0(r4)
    42b8:	0624 	add	r3, r0, r4
    42ba:	22c0 	addi	r1, r3, 0
    42bc:	50ba 	movi	r0, -70
    42be:	0026 	add	r0, r0, r6
    42c0:	4200 	st	0(r0), r1
    42c2:	37b5 	ld	r3, -22(r6)
    42c4:	54b8 	movi	r2, -72
    42c6:	04a6 	add	r2, r2, r6
    42c8:	3480 	ld	r2, 0(r2)
    42ca:	02e2 	add	r1, r3, r2
    42cc:	37ba 	ld	r3, -12(r6)
    42ce:	e640 	stb	0(r1), r3
        letra[i].color=colores[i];
    42d0:	39bf 	ld	r4, -2(r6)
    42d2:	49bb 	st	-10(r6), r4
    42d4:	39bf 	ld	r4, -2(r6)
    42d6:	500d 	movi	r0, 13
    42d8:	5160 	movhi	r0, 96
    42da:	520f 	movi	r1, 15
    42dc:	0258 	not	r1, r1
    42de:	2241 	addi	r1, r1, 1
    42e0:	0731 	sha	r3, r4, r1
    42e2:	2300 	addi	r1, r4, 0
    42e4:	24c0 	addi	r2, r3, 0
    42e6:	0221 	add	r1, r0, r1
    42e8:	d240 	ldb	r1, 0(r1)
    42ea:	43bc 	st	-8(r6), r1
    42ec:	5070 	movi	r0, 112
    42ee:	5160 	movhi	r0, 96
    42f0:	41b0 	st	-32(r6), r0
    42f2:	520f 	movi	r1, 15
    42f4:	0258 	not	r1, r1
    42f6:	2241 	addi	r1, r1, 1
    42f8:	35bb 	ld	r2, -10(r6)
    42fa:	06b1 	sha	r3, r2, r1
    42fc:	39bb 	ld	r4, -10(r6)
    42fe:	2300 	addi	r1, r4, 0
    4300:	24c0 	addi	r2, r3, 0
    4302:	560e 	movi	r3, 14
    4304:	06d8 	not	r3, r3
    4306:	26c1 	addi	r3, r3, 1
    4308:	067b 	shl	r3, r1, r3
    430a:	47af 	st	-34(r6), r3
    430c:	5002 	movi	r0, 2
    430e:	5602 	movi	r3, 2
    4310:	47ae 	st	-36(r6), r3
    4312:	08b0 	sha	r4, r2, r0
    4314:	31af 	ld	r0, -34(r6)
    4316:	080c 	or	r4, r0, r4
    4318:	31ae 	ld	r0, -36(r6)
    431a:	0670 	sha	r3, r1, r0
    431c:	5202 	movi	r1, 2
    431e:	43ac 	st	-40(r6), r1
    4320:	5400 	movi	r2, 0
    4322:	45ad 	st	-38(r6), r2
    4324:	31ac 	ld	r0, -40(r6)
    4326:	02e0 	add	r1, r3, r0
    4328:	50b8 	movi	r0, -72
    432a:	0026 	add	r0, r0, r6
    432c:	4200 	st	0(r0), r1
    432e:	52b8 	movi	r1, -72
    4330:	0266 	add	r1, r1, r6
    4332:	3240 	ld	r1, 0(r1)
    4334:	1463 	cmpltu	r2, r1, r3
    4336:	52bc 	movi	r1, -68
    4338:	0266 	add	r1, r1, r6
    433a:	4440 	st	0(r1), r2
    433c:	35ad 	ld	r2, -38(r6)
    433e:	0122 	add	r0, r4, r2
    4340:	54ba 	movi	r2, -70
    4342:	04a6 	add	r2, r2, r6
    4344:	4080 	st	0(r2), r0
    4346:	58bc 	movi	r4, -68
    4348:	0926 	add	r4, r4, r6
    434a:	3100 	ld	r0, 0(r4)
    434c:	58ba 	movi	r4, -70
    434e:	0926 	add	r4, r4, r6
    4350:	3900 	ld	r4, 0(r4)
    4352:	0624 	add	r3, r0, r4
    4354:	22c0 	addi	r1, r3, 0
    4356:	50ba 	movi	r0, -70
    4358:	0026 	add	r0, r0, r6
    435a:	4200 	st	0(r0), r1
    435c:	37b0 	ld	r3, -32(r6)
    435e:	54b8 	movi	r2, -72
    4360:	04a6 	add	r2, r2, r6
    4362:	3480 	ld	r2, 0(r2)
    4364:	02e2 	add	r1, r3, r2
    4366:	37bc 	ld	r3, -8(r6)
    4368:	e641 	stb	1(r1), r3
        mostrar_nueva_posicion(i,letra[i].posicion,letra[i].caracter,letra[i].color);
    436a:	35bf 	ld	r2, -2(r6)
    436c:	5870 	movi	r4, 112
    436e:	5960 	movhi	r4, 96
    4370:	49ab 	st	-42(r6), r4
    4372:	520f 	movi	r1, 15
    4374:	0258 	not	r1, r1
    4376:	2241 	addi	r1, r1, 1
    4378:	02b1 	sha	r1, r2, r1
    437a:	2680 	addi	r3, r2, 0
    437c:	2840 	addi	r4, r1, 0
    437e:	520e 	movi	r1, 14
    4380:	0258 	not	r1, r1
    4382:	2241 	addi	r1, r1, 1
    4384:	02f9 	shl	r1, r3, r1
    4386:	43aa 	st	-44(r6), r1
    4388:	5002 	movi	r0, 2
    438a:	5202 	movi	r1, 2
    438c:	43a9 	st	-46(r6), r1
    438e:	0530 	sha	r2, r4, r0
    4390:	31aa 	ld	r0, -44(r6)
    4392:	040a 	or	r2, r0, r2
    4394:	31a9 	ld	r0, -46(r6)
    4396:	02f0 	sha	r1, r3, r0
    4398:	37ab 	ld	r3, -42(r6)
    439a:	02e1 	add	r1, r3, r1
    439c:	3240 	ld	r1, 0(r1)
    439e:	43bd 	st	-6(r6), r1
    43a0:	39bf 	ld	r4, -2(r6)
    43a2:	5070 	movi	r0, 112
    43a4:	5160 	movhi	r0, 96
    43a6:	41a8 	st	-48(r6), r0
    43a8:	520f 	movi	r1, 15
    43aa:	0258 	not	r1, r1
    43ac:	2241 	addi	r1, r1, 1
    43ae:	0731 	sha	r3, r4, r1
    43b0:	2300 	addi	r1, r4, 0
    43b2:	24c0 	addi	r2, r3, 0
    43b4:	560e 	movi	r3, 14
    43b6:	06d8 	not	r3, r3
    43b8:	26c1 	addi	r3, r3, 1
    43ba:	067b 	shl	r3, r1, r3
    43bc:	47a7 	st	-50(r6), r3
    43be:	5002 	movi	r0, 2
    43c0:	5602 	movi	r3, 2
    43c2:	47a6 	st	-52(r6), r3
    43c4:	08b0 	sha	r4, r2, r0
    43c6:	31a7 	ld	r0, -50(r6)
    43c8:	080c 	or	r4, r0, r4
    43ca:	31a6 	ld	r0, -52(r6)
    43cc:	0670 	sha	r3, r1, r0
    43ce:	5202 	movi	r1, 2
    43d0:	43a4 	st	-56(r6), r1
    43d2:	5400 	movi	r2, 0
    43d4:	45a5 	st	-54(r6), r2
    43d6:	31a4 	ld	r0, -56(r6)
    43d8:	02e0 	add	r1, r3, r0
    43da:	50b8 	movi	r0, -72
    43dc:	0026 	add	r0, r0, r6
    43de:	4200 	st	0(r0), r1
    43e0:	52b8 	movi	r1, -72
    43e2:	0266 	add	r1, r1, r6
    43e4:	3240 	ld	r1, 0(r1)
    43e6:	1463 	cmpltu	r2, r1, r3
    43e8:	52bc 	movi	r1, -68
    43ea:	0266 	add	r1, r1, r6
    43ec:	4440 	st	0(r1), r2
    43ee:	35a5 	ld	r2, -54(r6)
    43f0:	0122 	add	r0, r4, r2
    43f2:	54ba 	movi	r2, -70
    43f4:	04a6 	add	r2, r2, r6
    43f6:	4080 	st	0(r2), r0
    43f8:	58bc 	movi	r4, -68
    43fa:	0926 	add	r4, r4, r6
    43fc:	3100 	ld	r0, 0(r4)
    43fe:	58ba 	movi	r4, -70
    4400:	0926 	add	r4, r4, r6
    4402:	3900 	ld	r4, 0(r4)
    4404:	0624 	add	r3, r0, r4
    4406:	22c0 	addi	r1, r3, 0
    4408:	50ba 	movi	r0, -70
    440a:	0026 	add	r0, r0, r6
    440c:	4200 	st	0(r0), r1
    440e:	37a8 	ld	r3, -48(r6)
    4410:	54b8 	movi	r2, -72
    4412:	04a6 	add	r2, r2, r6
    4414:	3480 	ld	r2, 0(r2)
    4416:	02e2 	add	r1, r3, r2
    4418:	d240 	ldb	r1, 0(r1)
    441a:	43be 	st	-4(r6), r1
    441c:	39bf 	ld	r4, -2(r6)
    441e:	5670 	movi	r3, 112
    4420:	5760 	movhi	r3, 96
    4422:	47a3 	st	-58(r6), r3
    4424:	520f 	movi	r1, 15
    4426:	0258 	not	r1, r1
    4428:	2241 	addi	r1, r1, 1
    442a:	0731 	sha	r3, r4, r1
    442c:	2300 	addi	r1, r4, 0
    442e:	24c0 	addi	r2, r3, 0
    4430:	560e 	movi	r3, 14
    4432:	06d8 	not	r3, r3
    4434:	26c1 	addi	r3, r3, 1
    4436:	067b 	shl	r3, r1, r3
    4438:	47a2 	st	-60(r6), r3
    443a:	5002 	movi	r0, 2
    443c:	5802 	movi	r4, 2
    443e:	49a1 	st	-62(r6), r4
    4440:	08b0 	sha	r4, r2, r0
    4442:	31a2 	ld	r0, -60(r6)
    4444:	080c 	or	r4, r0, r4
    4446:	31a1 	ld	r0, -62(r6)
    4448:	0670 	sha	r3, r1, r0
    444a:	5402 	movi	r2, 2
    444c:	52be 	movi	r1, -66
    444e:	0266 	add	r1, r1, r6
    4450:	4440 	st	0(r1), r2
    4452:	5000 	movi	r0, 0
    4454:	41a0 	st	-64(r6), r0
    4456:	52be 	movi	r1, -66
    4458:	0266 	add	r1, r1, r6
    445a:	3240 	ld	r1, 0(r1)
    445c:	04e1 	add	r2, r3, r1
    445e:	52b8 	movi	r1, -72
    4460:	0266 	add	r1, r1, r6
    4462:	4440 	st	0(r1), r2
    4464:	54b8 	movi	r2, -72
    4466:	04a6 	add	r2, r2, r6
    4468:	3480 	ld	r2, 0(r2)
    446a:	10a3 	cmpltu	r0, r2, r3
    446c:	54bc 	movi	r2, -68
    446e:	04a6 	add	r2, r2, r6
    4470:	4080 	st	0(r2), r0
    4472:	31a0 	ld	r0, -64(r6)
    4474:	0320 	add	r1, r4, r0
    4476:	50ba 	movi	r0, -70
    4478:	0026 	add	r0, r0, r6
    447a:	4200 	st	0(r0), r1
    447c:	52bc 	movi	r1, -68
    447e:	0266 	add	r1, r1, r6
    4480:	3440 	ld	r2, 0(r1)
    4482:	52ba 	movi	r1, -70
    4484:	0266 	add	r1, r1, r6
    4486:	3240 	ld	r1, 0(r1)
    4488:	06a1 	add	r3, r2, r1
    448a:	28c0 	addi	r4, r3, 0
    448c:	54ba 	movi	r2, -70
    448e:	04a6 	add	r2, r2, r6
    4490:	4880 	st	0(r2), r4
    4492:	35a3 	ld	r2, -58(r6)
    4494:	50b8 	movi	r0, -72
    4496:	0026 	add	r0, r0, r6
    4498:	3000 	ld	r0, 0(r0)
    449a:	02a0 	add	r1, r2, r0
    449c:	d641 	ldb	r3, 1(r1)
    449e:	2ffa 	addi	r7, r7, -6
    44a0:	23c0 	addi	r1, r7, 0
    44a2:	35bf 	ld	r2, -2(r6)
    44a4:	4440 	st	0(r1), r2
    44a6:	35bd 	ld	r2, -6(r6)
    44a8:	4441 	st	2(r1), r2
    44aa:	39be 	ld	r4, -4(r6)
    44ac:	e844 	stb	4(r1), r4
    44ae:	e645 	stb	5(r1), r3
    44b0:	528a 	movi	r1, -118
    44b2:	5340 	movhi	r1, 64
    44b4:	aa44 	jal	r5, r1
    44b6:	2fc6 	addi	r7, r7, 6
    44b8:	33bf 	ld	r1, -2(r6)
    44ba:	2241 	addi	r1, r1, 1
    44bc:	43bf 	st	-2(r6), r1
    44be:	33bf 	ld	r1, -2(r6)
    44c0:	540b 	movi	r2, 11
    44c2:	124a 	cmple	r1, r1, r2
    44c4:	5a00 	movi	r5, 0
    44c6:	5b42 	movhi	r5, 66
    44c8:	a341 	jnz	r1, r5
    }
}
    44ca:	31c3 	ld	r0, 6(r7)
    44cc:	35c2 	ld	r2, 4(r7)
    44ce:	37c1 	ld	r3, 2(r7)
    44d0:	39c0 	ld	r4, 0(r7)
    44d2:	2f80 	addi	r7, r6, 0
    44d4:	3dc0 	ld	r6, 0(r7)
    44d6:	3bc1 	ld	r5, 2(r7)
    44d8:	2fc4 	addi	r7, r7, 4
    44da:	a143 	jmp	r5

000044dc <main>:


int main (void) {
    44dc:	2fe0 	addi	r7, r7, -32
    44de:	4bcf 	st	30(r7), r5
    44e0:	4dce 	st	28(r7), r6
    44e2:	2ddc 	addi	r6, r7, 28
    44e4:	5ac2 	movi	r5, -62
    44e6:	0fe5 	add	r7, r7, r5
    44e8:	41c3 	st	6(r7), r0
    44ea:	45c2 	st	4(r7), r2
    44ec:	47c1 	st	2(r7), r3
    44ee:	49c0 	st	0(r7), r4

    unsigned int tics_anterior=0;
    44f0:	5200 	movi	r1, 0
    44f2:	43bd 	st	-6(r6), r1
    int pause=0;
    44f4:	5200 	movi	r1, 0
    44f6:	43be 	st	-4(r6), r1
    
    if (NUMERO_LETRAS<=LIMITE_LETRAS) {
        
        reset_corre_letras();
    44f8:	52a8 	movi	r1, -88
    44fa:	5341 	movhi	r1, 65
    44fc:	aa44 	jal	r5, r1

        while (1) {
            switch (tecla_pulsada)
    44fe:	5262 	movi	r1, 98
    4500:	5360 	movhi	r1, 96
    4502:	3240 	ld	r1, 0(r1)
    4504:	43b7 	st	-18(r6), r1
    4506:	5252 	movi	r1, 82
    4508:	31b7 	ld	r0, -18(r6)
    450a:	1219 	cmpeq	r1, r0, r1
    450c:	6315 	bnz	r1, 44
    450e:	5252 	movi	r1, 82
    4510:	35b7 	ld	r2, -18(r6)
    4512:	12a9 	cmpleu	r1, r2, r1
    4514:	6207 	bz	r1, 16
    4516:	5250 	movi	r1, 80
    4518:	37b7 	ld	r3, -18(r6)
    451a:	12d9 	cmpeq	r1, r3, r1
    451c:	6316 	bnz	r1, 46
    451e:	5a62 	movi	r5, 98
    4520:	5b45 	movhi	r5, 69
    4522:	a143 	jmp	r5
    4524:	5270 	movi	r1, 112
    4526:	39b7 	ld	r4, -18(r6)
    4528:	1319 	cmpeq	r1, r4, r1
    452a:	630f 	bnz	r1, 32
    452c:	5272 	movi	r1, 114
    452e:	31b7 	ld	r0, -18(r6)
    4530:	1219 	cmpeq	r1, r0, r1
    4532:	6302 	bnz	r1, 6
    4534:	5a00 	movi	r5, 0
    4536:	6a15 	bz	r5, 44
            {
            case 'r':    case 'R':
                reset_corre_letras();
    4538:	52a8 	movi	r1, -88
    453a:	5341 	movhi	r1, 65
    453c:	aa44 	jal	r5, r1
                tecla_pulsada=0;
    453e:	5462 	movi	r2, 98
    4540:	5560 	movhi	r2, 96
    4542:	5200 	movi	r1, 0
    4544:	4280 	st	0(r2), r1
                break;
    4546:	5a00 	movi	r5, 0
    4548:	6a0c 	bz	r5, 26

            case 'p':    case 'P':
                if (pause==0) pause=1; else pause=0;
    454a:	33be 	ld	r1, -4(r6)
    454c:	6304 	bnz	r1, 10
    454e:	5201 	movi	r1, 1
    4550:	43be 	st	-4(r6), r1
    4552:	5a00 	movi	r5, 0
    4554:	6a02 	bz	r5, 6
    4556:	5200 	movi	r1, 0
    4558:	43be 	st	-4(r6), r1
                tecla_pulsada=0;
    455a:	5462 	movi	r2, 98
    455c:	5560 	movhi	r2, 96
    455e:	5200 	movi	r1, 0
    4560:	4280 	st	0(r2), r1
                break;

            default:
                break;
            }

            if (pause==0) {
    4562:	33be 	ld	r1, -4(r6)
    4564:	5afe 	movi	r5, -2
    4566:	5b44 	movhi	r5, 68
    4568:	a341 	jnz	r1, r5
                // para DEBUG: mostramos los valores del timer por los leds verdes
                __asm__ ( "out %0, %1" 
    456a:	5260 	movi	r1, 96
    456c:	5360 	movhi	r1, 96
    456e:	3240 	ld	r1, 0(r1)
    4570:	7305 	out	5, r1
                        : /* sin salidas*/
                        : "i" (5), "r" (tics_timer));
                // fin DEBUG

                if (tics_timer!=tics_anterior) {
    4572:	5260 	movi	r1, 96
    4574:	5360 	movhi	r1, 96
    4576:	3440 	ld	r2, 0(r1)
    4578:	33bd 	ld	r1, -6(r6)
    457a:	1299 	cmpeq	r1, r2, r1
    457c:	5afe 	movi	r5, -2
    457e:	5b44 	movhi	r5, 68
    4580:	a341 	jnz	r1, r5
                    tics_anterior=tics_timer;
    4582:	5260 	movi	r1, 96
    4584:	5360 	movhi	r1, 96
    4586:	3240 	ld	r1, 0(r1)
    4588:	43bd 	st	-6(r6), r1

                    int fila;
                    for (fila=0; fila<NUMERO_LETRAS; fila++) {
    458a:	5200 	movi	r1, 0
    458c:	43bf 	st	-2(r6), r1
    458e:	5a82 	movi	r5, -126
    4590:	5b48 	movhi	r5, 72
    4592:	a143 	jmp	r5
                        if (tics_timer%divisores[fila]==0) {
    4594:	5260 	movi	r1, 96
    4596:	5360 	movhi	r1, 96
    4598:	3240 	ld	r1, 0(r1)
    459a:	43b8 	st	-16(r6), r1
    459c:	39bf 	ld	r4, -2(r6)
    459e:	521a 	movi	r1, 26
    45a0:	5360 	movhi	r1, 96
    45a2:	43b6 	st	-20(r6), r1
    45a4:	520f 	movi	r1, 15
    45a6:	0258 	not	r1, r1
    45a8:	2241 	addi	r1, r1, 1
    45aa:	0731 	sha	r3, r4, r1
    45ac:	2300 	addi	r1, r4, 0
    45ae:	24c0 	addi	r2, r3, 0
    45b0:	0661 	add	r3, r1, r1
    45b2:	10e1 	cmpltu	r0, r3, r1
    45b4:	08a2 	add	r4, r2, r2
    45b6:	0224 	add	r1, r0, r4
    45b8:	2840 	addi	r4, r1, 0
    45ba:	35b6 	ld	r2, -20(r6)
    45bc:	02a3 	add	r1, r2, r3
    45be:	3240 	ld	r1, 0(r1)
    45c0:	2440 	addi	r2, r1, 0
    45c2:	37b8 	ld	r3, -16(r6)
    45c4:	82ea 	divu	r1, r3, r2
    45c6:	8242 	mul	r1, r1, r2
    45c8:	35b8 	ld	r2, -16(r6)
    45ca:	02a9 	sub	r1, r2, r1
    45cc:	5a7c 	movi	r5, 124
    45ce:	5b48 	movhi	r5, 72
    45d0:	a341 	jnz	r1, r5
                            borrar_letra(fila,letra[fila].posicion);
    45d2:	35bf 	ld	r2, -2(r6)
    45d4:	5870 	movi	r4, 112
    45d6:	5960 	movhi	r4, 96
    45d8:	49b5 	st	-22(r6), r4
    45da:	520f 	movi	r1, 15
    45dc:	0258 	not	r1, r1
    45de:	2241 	addi	r1, r1, 1
    45e0:	02b1 	sha	r1, r2, r1
    45e2:	2680 	addi	r3, r2, 0
    45e4:	2840 	addi	r4, r1, 0
    45e6:	520e 	movi	r1, 14
    45e8:	0258 	not	r1, r1
    45ea:	2241 	addi	r1, r1, 1
    45ec:	02f9 	shl	r1, r3, r1
    45ee:	43b4 	st	-24(r6), r1
    45f0:	5002 	movi	r0, 2
    45f2:	5202 	movi	r1, 2
    45f4:	43b3 	st	-26(r6), r1
    45f6:	0530 	sha	r2, r4, r0
    45f8:	31b4 	ld	r0, -24(r6)
    45fa:	040a 	or	r2, r0, r2
    45fc:	31b3 	ld	r0, -26(r6)
    45fe:	02f0 	sha	r1, r3, r0
    4600:	37b5 	ld	r3, -22(r6)
    4602:	02e1 	add	r1, r3, r1
    4604:	3640 	ld	r3, 0(r1)
    4606:	2ffc 	addi	r7, r7, -4
    4608:	25c0 	addi	r2, r7, 0
    460a:	33bf 	ld	r1, -2(r6)
    460c:	4280 	st	0(r2), r1
    460e:	4681 	st	2(r2), r3
    4610:	5248 	movi	r1, 72
    4612:	5340 	movhi	r1, 64
    4614:	aa44 	jal	r5, r1
    4616:	2fc4 	addi	r7, r7, 4
                            if (letra[fila].posicion<80)
    4618:	35bf 	ld	r2, -2(r6)
    461a:	5870 	movi	r4, 112
    461c:	5960 	movhi	r4, 96
    461e:	49b2 	st	-28(r6), r4
    4620:	520f 	movi	r1, 15
    4622:	0258 	not	r1, r1
    4624:	2241 	addi	r1, r1, 1
    4626:	02b1 	sha	r1, r2, r1
    4628:	2680 	addi	r3, r2, 0
    462a:	2840 	addi	r4, r1, 0
    462c:	520e 	movi	r1, 14
    462e:	0258 	not	r1, r1
    4630:	2241 	addi	r1, r1, 1
    4632:	02f9 	shl	r1, r3, r1
    4634:	43b1 	st	-30(r6), r1
    4636:	5002 	movi	r0, 2
    4638:	5202 	movi	r1, 2
    463a:	43b0 	st	-32(r6), r1
    463c:	0530 	sha	r2, r4, r0
    463e:	31b1 	ld	r0, -30(r6)
    4640:	040a 	or	r2, r0, r2
    4642:	31b0 	ld	r0, -32(r6)
    4644:	02f0 	sha	r1, r3, r0
    4646:	37b2 	ld	r3, -28(r6)
    4648:	02e1 	add	r1, r3, r1
    464a:	3440 	ld	r2, 0(r1)
    464c:	524f 	movi	r1, 79
    464e:	1289 	cmple	r1, r2, r1
    4650:	5ad0 	movi	r5, -48
    4652:	5b46 	movhi	r5, 70
    4654:	a340 	jz	r1, r5
                                letra[fila].posicion++;
    4656:	39bf 	ld	r4, -2(r6)
    4658:	49b9 	st	-14(r6), r4
    465a:	5070 	movi	r0, 112
    465c:	5160 	movhi	r0, 96
    465e:	41af 	st	-34(r6), r0
    4660:	520f 	movi	r1, 15
    4662:	0258 	not	r1, r1
    4664:	2241 	addi	r1, r1, 1
    4666:	35b9 	ld	r2, -14(r6)
    4668:	02b1 	sha	r1, r2, r1
    466a:	31b9 	ld	r0, -14(r6)
    466c:	2600 	addi	r3, r0, 0
    466e:	2840 	addi	r4, r1, 0
    4670:	520e 	movi	r1, 14
    4672:	0258 	not	r1, r1
    4674:	2241 	addi	r1, r1, 1
    4676:	02f9 	shl	r1, r3, r1
    4678:	43ae 	st	-36(r6), r1
    467a:	5002 	movi	r0, 2
    467c:	5202 	movi	r1, 2
    467e:	43ad 	st	-38(r6), r1
    4680:	0530 	sha	r2, r4, r0
    4682:	31ae 	ld	r0, -36(r6)
    4684:	040a 	or	r2, r0, r2
    4686:	31ad 	ld	r0, -38(r6)
    4688:	02f0 	sha	r1, r3, r0
    468a:	37af 	ld	r3, -34(r6)
    468c:	02e1 	add	r1, r3, r1
    468e:	3240 	ld	r1, 0(r1)
    4690:	2241 	addi	r1, r1, 1
    4692:	43ba 	st	-12(r6), r1
    4694:	5870 	movi	r4, 112
    4696:	5960 	movhi	r4, 96
    4698:	49ac 	st	-40(r6), r4
    469a:	520f 	movi	r1, 15
    469c:	0258 	not	r1, r1
    469e:	2241 	addi	r1, r1, 1
    46a0:	31b9 	ld	r0, -14(r6)
    46a2:	0231 	sha	r1, r0, r1
    46a4:	35b9 	ld	r2, -14(r6)
    46a6:	2680 	addi	r3, r2, 0
    46a8:	2840 	addi	r4, r1, 0
    46aa:	520e 	movi	r1, 14
    46ac:	0258 	not	r1, r1
    46ae:	2241 	addi	r1, r1, 1
    46b0:	02f9 	shl	r1, r3, r1
    46b2:	43ab 	st	-42(r6), r1
    46b4:	5002 	movi	r0, 2
    46b6:	5202 	movi	r1, 2
    46b8:	43aa 	st	-44(r6), r1
    46ba:	0530 	sha	r2, r4, r0
    46bc:	31ab 	ld	r0, -42(r6)
    46be:	040a 	or	r2, r0, r2
    46c0:	31aa 	ld	r0, -44(r6)
    46c2:	02f0 	sha	r1, r3, r0
    46c4:	37ac 	ld	r3, -40(r6)
    46c6:	02e1 	add	r1, r3, r1
    46c8:	39ba 	ld	r4, -12(r6)
    46ca:	4840 	st	0(r1), r4
    46cc:	5a00 	movi	r5, 0
    46ce:	6a1b 	bz	r5, 56
                            else
                                letra[fila].posicion=0;
    46d0:	35bf 	ld	r2, -2(r6)
    46d2:	5070 	movi	r0, 112
    46d4:	5160 	movhi	r0, 96
    46d6:	41a9 	st	-46(r6), r0
    46d8:	520f 	movi	r1, 15
    46da:	0258 	not	r1, r1
    46dc:	2241 	addi	r1, r1, 1
    46de:	02b1 	sha	r1, r2, r1
    46e0:	2680 	addi	r3, r2, 0
    46e2:	2840 	addi	r4, r1, 0
    46e4:	520e 	movi	r1, 14
    46e6:	0258 	not	r1, r1
    46e8:	2241 	addi	r1, r1, 1
    46ea:	02f9 	shl	r1, r3, r1
    46ec:	43a8 	st	-48(r6), r1
    46ee:	5002 	movi	r0, 2
    46f0:	5202 	movi	r1, 2
    46f2:	43a7 	st	-50(r6), r1
    46f4:	0530 	sha	r2, r4, r0
    46f6:	31a8 	ld	r0, -48(r6)
    46f8:	040a 	or	r2, r0, r2
    46fa:	31a7 	ld	r0, -50(r6)
    46fc:	02f0 	sha	r1, r3, r0
    46fe:	37a9 	ld	r3, -46(r6)
    4700:	04e1 	add	r2, r3, r1
    4702:	5200 	movi	r1, 0
    4704:	4280 	st	0(r2), r1

                            mostrar_nueva_posicion(fila,letra[fila].posicion,letra[fila].caracter,letra[fila].color);
    4706:	35bf 	ld	r2, -2(r6)
    4708:	5870 	movi	r4, 112
    470a:	5960 	movhi	r4, 96
    470c:	49a6 	st	-52(r6), r4
    470e:	520f 	movi	r1, 15
    4710:	0258 	not	r1, r1
    4712:	2241 	addi	r1, r1, 1
    4714:	02b1 	sha	r1, r2, r1
    4716:	2680 	addi	r3, r2, 0
    4718:	2840 	addi	r4, r1, 0
    471a:	520e 	movi	r1, 14
    471c:	0258 	not	r1, r1
    471e:	2241 	addi	r1, r1, 1
    4720:	02f9 	shl	r1, r3, r1
    4722:	43a5 	st	-54(r6), r1
    4724:	5002 	movi	r0, 2
    4726:	5202 	movi	r1, 2
    4728:	43a4 	st	-56(r6), r1
    472a:	0530 	sha	r2, r4, r0
    472c:	31a5 	ld	r0, -54(r6)
    472e:	040a 	or	r2, r0, r2
    4730:	31a4 	ld	r0, -56(r6)
    4732:	02f0 	sha	r1, r3, r0
    4734:	37a6 	ld	r3, -52(r6)
    4736:	02e1 	add	r1, r3, r1
    4738:	3240 	ld	r1, 0(r1)
    473a:	43bb 	st	-10(r6), r1
    473c:	39bf 	ld	r4, -2(r6)
    473e:	5070 	movi	r0, 112
    4740:	5160 	movhi	r0, 96
    4742:	41a3 	st	-58(r6), r0
    4744:	520f 	movi	r1, 15
    4746:	0258 	not	r1, r1
    4748:	2241 	addi	r1, r1, 1
    474a:	0731 	sha	r3, r4, r1
    474c:	2300 	addi	r1, r4, 0
    474e:	24c0 	addi	r2, r3, 0
    4750:	560e 	movi	r3, 14
    4752:	06d8 	not	r3, r3
    4754:	26c1 	addi	r3, r3, 1
    4756:	067b 	shl	r3, r1, r3
    4758:	47a2 	st	-60(r6), r3
    475a:	5002 	movi	r0, 2
    475c:	5602 	movi	r3, 2
    475e:	47a1 	st	-62(r6), r3
    4760:	08b0 	sha	r4, r2, r0
    4762:	31a2 	ld	r0, -60(r6)
    4764:	080c 	or	r4, r0, r4
    4766:	31a1 	ld	r0, -62(r6)
    4768:	0670 	sha	r3, r1, r0
    476a:	5402 	movi	r2, 2
    476c:	52be 	movi	r1, -66
    476e:	0266 	add	r1, r1, r6
    4770:	4440 	st	0(r1), r2
    4772:	5000 	movi	r0, 0
    4774:	41a0 	st	-64(r6), r0
    4776:	52be 	movi	r1, -66
    4778:	0266 	add	r1, r1, r6
    477a:	3240 	ld	r1, 0(r1)
    477c:	04e1 	add	r2, r3, r1
    477e:	52ae 	movi	r1, -82
    4780:	0266 	add	r1, r1, r6
    4782:	4440 	st	0(r1), r2
    4784:	54ae 	movi	r2, -82
    4786:	04a6 	add	r2, r2, r6
    4788:	3480 	ld	r2, 0(r2)
    478a:	10a3 	cmpltu	r0, r2, r3
    478c:	54b2 	movi	r2, -78
    478e:	04a6 	add	r2, r2, r6
    4790:	4080 	st	0(r2), r0
    4792:	31a0 	ld	r0, -64(r6)
    4794:	0320 	add	r1, r4, r0
    4796:	50b0 	movi	r0, -80
    4798:	0026 	add	r0, r0, r6
    479a:	4200 	st	0(r0), r1
    479c:	52b2 	movi	r1, -78
    479e:	0266 	add	r1, r1, r6
    47a0:	3440 	ld	r2, 0(r1)
    47a2:	52b0 	movi	r1, -80
    47a4:	0266 	add	r1, r1, r6
    47a6:	3240 	ld	r1, 0(r1)
    47a8:	06a1 	add	r3, r2, r1
    47aa:	28c0 	addi	r4, r3, 0
    47ac:	54b0 	movi	r2, -80
    47ae:	04a6 	add	r2, r2, r6
    47b0:	4880 	st	0(r2), r4
    47b2:	35a3 	ld	r2, -58(r6)
    47b4:	50ae 	movi	r0, -82
    47b6:	0026 	add	r0, r0, r6
    47b8:	3000 	ld	r0, 0(r0)
    47ba:	02a0 	add	r1, r2, r0
    47bc:	d240 	ldb	r1, 0(r1)
    47be:	43bc 	st	-8(r6), r1
    47c0:	39bf 	ld	r4, -2(r6)
    47c2:	5470 	movi	r2, 112
    47c4:	5560 	movhi	r2, 96
    47c6:	52bc 	movi	r1, -68
    47c8:	0266 	add	r1, r1, r6
    47ca:	4440 	st	0(r1), r2
    47cc:	520f 	movi	r1, 15
    47ce:	0258 	not	r1, r1
    47d0:	2241 	addi	r1, r1, 1
    47d2:	0731 	sha	r3, r4, r1
    47d4:	2300 	addi	r1, r4, 0
    47d6:	24c0 	addi	r2, r3, 0
    47d8:	560e 	movi	r3, 14
    47da:	06d8 	not	r3, r3
    47dc:	26c1 	addi	r3, r3, 1
    47de:	007b 	shl	r0, r1, r3
    47e0:	58ba 	movi	r4, -70
    47e2:	0926 	add	r4, r4, r6
    47e4:	4100 	st	0(r4), r0
    47e6:	5002 	movi	r0, 2
    47e8:	5802 	movi	r4, 2
    47ea:	56b8 	movi	r3, -72
    47ec:	06e6 	add	r3, r3, r6
    47ee:	48c0 	st	0(r3), r4
    47f0:	08b0 	sha	r4, r2, r0
    47f2:	50ba 	movi	r0, -70
    47f4:	0026 	add	r0, r0, r6
    47f6:	3000 	ld	r0, 0(r0)
    47f8:	080c 	or	r4, r0, r4
    47fa:	50b8 	movi	r0, -72
    47fc:	0026 	add	r0, r0, r6
    47fe:	3000 	ld	r0, 0(r0)
    4800:	0670 	sha	r3, r1, r0
    4802:	5402 	movi	r2, 2
    4804:	52b4 	movi	r1, -76
    4806:	0266 	add	r1, r1, r6
    4808:	4440 	st	0(r1), r2
    480a:	5200 	movi	r1, 0
    480c:	50b6 	movi	r0, -74
    480e:	0026 	add	r0, r0, r6
    4810:	4200 	st	0(r0), r1
    4812:	54b4 	movi	r2, -76
    4814:	04a6 	add	r2, r2, r6
    4816:	3480 	ld	r2, 0(r2)
    4818:	00e2 	add	r0, r3, r2
    481a:	54ae 	movi	r2, -82
    481c:	04a6 	add	r2, r2, r6
    481e:	4080 	st	0(r2), r0
    4820:	50ae 	movi	r0, -82
    4822:	0026 	add	r0, r0, r6
    4824:	3000 	ld	r0, 0(r0)
    4826:	1223 	cmpltu	r1, r0, r3
    4828:	50b2 	movi	r0, -78
    482a:	0026 	add	r0, r0, r6
    482c:	4200 	st	0(r0), r1
    482e:	52b6 	movi	r1, -74
    4830:	0266 	add	r1, r1, r6
    4832:	3240 	ld	r1, 0(r1)
    4834:	0521 	add	r2, r4, r1
    4836:	52b0 	movi	r1, -80
    4838:	0266 	add	r1, r1, r6
    483a:	4440 	st	0(r1), r2
    483c:	54b2 	movi	r2, -78
    483e:	04a6 	add	r2, r2, r6
    4840:	3880 	ld	r4, 0(r2)
    4842:	54b0 	movi	r2, -80
    4844:	04a6 	add	r2, r2, r6
    4846:	3480 	ld	r2, 0(r2)
    4848:	0722 	add	r3, r4, r2
    484a:	20c0 	addi	r0, r3, 0
    484c:	58b0 	movi	r4, -80
    484e:	0926 	add	r4, r4, r6
    4850:	4100 	st	0(r4), r0
    4852:	54bc 	movi	r2, -68
    4854:	04a6 	add	r2, r2, r6
    4856:	3680 	ld	r3, 0(r2)
    4858:	54ae 	movi	r2, -82
    485a:	04a6 	add	r2, r2, r6
    485c:	3480 	ld	r2, 0(r2)
    485e:	02e2 	add	r1, r3, r2
    4860:	d641 	ldb	r3, 1(r1)
    4862:	2ffa 	addi	r7, r7, -6
    4864:	23c0 	addi	r1, r7, 0
    4866:	35bf 	ld	r2, -2(r6)
    4868:	4440 	st	0(r1), r2
    486a:	39bb 	ld	r4, -10(r6)
    486c:	4841 	st	2(r1), r4
    486e:	31bc 	ld	r0, -8(r6)
    4870:	e044 	stb	4(r1), r0
    4872:	e645 	stb	5(r1), r3
    4874:	528a 	movi	r1, -118
    4876:	5340 	movhi	r1, 64
    4878:	aa44 	jal	r5, r1
    487a:	2fc6 	addi	r7, r7, 6
    487c:	33bf 	ld	r1, -2(r6)
    487e:	2241 	addi	r1, r1, 1
    4880:	43bf 	st	-2(r6), r1
    4882:	33bf 	ld	r1, -2(r6)
    4884:	540b 	movi	r2, 11
    4886:	124a 	cmple	r1, r1, r2
    4888:	5a94 	movi	r5, -108
    488a:	5b45 	movhi	r5, 69
    488c:	a341 	jnz	r1, r5
                        }
                    }
                }
            }
        }
    488e:	5afe 	movi	r5, -2
    4890:	5b44 	movhi	r5, 68
    4892:	a143 	jmp	r5

temp_corre_letras.o:     file format elf32-sisa
temp_corre_letras.o
architecture: sisa:3, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00000000 vaddr 0x00003f8c paddr 0x00003f8c align 2**0
         filesz 0x00000908 memsz 0x00000908 flags r-x
    LOAD off    0x00000910 vaddr 0x00006000 paddr 0x00006000 align 2**0
         filesz 0x00000060 memsz 0x000000a0 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .sistema      00000894  00004000  00004000  00000074  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .sysdata      00000060  00006000  00006000  00000910  2**1  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  00006060  00006060  00000970  2**4  ALLOC
  3 .stab         000007bc  000060a0  000060a0  00000970  2**2  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000005c1  0000685c  0000685c  0000112c  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00006000 l    d  .sysdata	00000000 .sysdata
00006034 g     O .sysdata	0000002b mensaje
00006000 g     O .sysdata	0000000d letras
0000600d g     O .sysdata	0000000d colores
0000601a g     O .sysdata	0000001a divisores


Disassembly of section .sysdata:

00006000 <letras>:
                        }
                    }
                }
            }
        }
    6000:	41 42 43 44 45 46 47 48 49 4a 4b 4c 4d              ABCDEFGHIJKLM

0000600d <colores>:
    600d:	3f 03 0c 30 15 3c 0f 2a 2a 3f 1a 21 2b              ?..0.<.**?.!+

0000601a <divisores>:
    601a:	01 00 02 00 03 00 04 00 05 00 06 00 07 00 08 00     ................
    602a:	09 00 0a 00 0b 00 0c 00 0d 00                       ..........

00006034 <mensaje>:
    6034:	70 75 6c 73 61 20 27 52 27 20 70 61 72 61 20 72     pulsa 'R' para r
    6044:	65 69 6e 69 63 69 61 72 20 6f 20 27 50 27 20 70     einiciar o 'P' p
    6054:	61 72 61 20 70 61 75 73 61 2e 00 00                 ara pausa...
